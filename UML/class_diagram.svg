<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="2223px" preserveAspectRatio="none" style="width:2275px;height:2223px;" version="1.1" viewBox="0 0 2275 2223" width="2275px" zoomAndPan="magnify"><defs><filter height="300%" id="f1jej87jrmrh57" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[59b530d44ae785dc18db921986a9c15c]
class Document--><rect fill="#FEFECE" filter="url(#f1jej87jrmrh57)" height="1110.3164" id="Document" style="stroke: #A80036; stroke-width: 1.5;" width="349" x="6" y="8"/><ellipse cx="147.25" cy="24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M149.7231,30.1431 Q149.1421,30.4419 148.5029,30.5913 Q147.8638,30.7407 147.1582,30.7407 Q144.6514,30.7407 143.3315,29.0889 Q142.0117,27.437 142.0117,24.3159 Q142.0117,21.1865 143.3315,19.5347 Q144.6514,17.8828 147.1582,17.8828 Q147.8638,17.8828 148.5112,18.0322 Q149.1587,18.1816 149.7231,18.4805 L149.7231,21.2031 Q149.0923,20.6221 148.4988,20.3523 Q147.9053,20.0825 147.2744,20.0825 Q145.9297,20.0825 145.2449,21.1492 Q144.5601,22.2158 144.5601,24.3159 Q144.5601,26.4077 145.2449,27.4744 Q145.9297,28.541 147.2744,28.541 Q147.9053,28.541 148.4988,28.2712 Q149.0923,28.0015 149.7231,27.4204 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="58" x="167.75" y="28.5352">Document</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="354" y1="40" y2="40"/><ellipse cx="17" cy="51" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="26" y="54.6348">_runtimeParams: RuntimeParams</text><ellipse cx="17" cy="63.9551" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="26" y="67.5898">_initParams: RuntimeParams</text><ellipse cx="17" cy="76.9102" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="26" y="80.5449">_worldParams: WorldParams</text><ellipse cx="17" cy="89.8652" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="26" y="93.5">_tmpWorldParams: WorldParams</text><ellipse cx="17" cy="102.8203" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="26" y="106.4551">_popLock: Lock *</text><ellipse cx="17" cy="115.7754" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="26" y="119.4102">_statInfo: StatInfo *</text><ellipse cx="17" cy="128.7305" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="26" y="132.3652">«get» Pop: Agent **</text><ellipse cx="17" cy="141.6855" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="26" y="145.3203">«get» QList: Agent *</text><ellipse cx="17" cy="154.6406" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="26" y="158.2754">«get» CList: Agent *</text><ellipse cx="17" cy="167.5957" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="26" y="171.2305">«get» WrapList: MutableArray&lt;WrapInfo *&gt; *</text><ellipse cx="17" cy="180.5508" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="26" y="184.1855">«get» CListP: Agent **</text><ellipse cx="17" cy="193.5059" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="26" y="197.1406">«get» QListP: Agent **</text><ellipse cx="17" cy="206.4609" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="26" y="210.0957">«get» runtimeParamsP: RuntimeParams *</text><ellipse cx="17" cy="219.416" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="26" y="223.0508">«get» initParamsP: RuntimeParams *</text><ellipse cx="17" cy="232.3711" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="26" y="236.0059">«get» worldParamsP: WorldParams *</text><ellipse cx="17" cy="245.3262" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="26" y="248.9609">«get» tmpWorldParamsP: WorldParams *</text><ellipse cx="17" cy="258.2813" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="26" y="261.916">«get» RecovPHist: MutableArray&lt;MyCounter *&gt; *</text><ellipse cx="17" cy="271.2363" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="26" y="274.8711">«get» IncubPHist: MutableArray&lt;MyCounter *&gt; *</text><ellipse cx="17" cy="284.1914" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="26" y="287.8262">«get» DeathPHist: MutableArray&lt;MyCounter *&gt; *</text><ellipse cx="17" cy="297.1465" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="26" y="300.7813">«get» scenario: Array&lt;any&gt; *</text><ellipse cx="17" cy="310.1016" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="26" y="313.7363">«get» ID: String *</text><ellipse cx="17" cy="323.0566" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="26" y="326.6914">«get» lastTLock: Lock *</text><ellipse cx="17" cy="336.0117" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="26" y="339.6465">«get/set» lastTouch: Date *</text><ellipse cx="17" cy="348.9668" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="26" y="352.6016">«get/set» docKey: Number *</text><ellipse cx="17" cy="361.9219" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="26" y="365.5566">«get/set» stopCallBack: LoopMode -&gt; void</text><ellipse cx="17" cy="374.877" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="26" y="378.5117">«get» statInfo: StatInfo *</text><ellipse cx="17" cy="387.832" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="26" y="391.4668">«get» scenarioPList: Array&lt;any&gt; *</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="397.7871"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="26" y="404.4219">scenarioIndex: Integer</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="410.7422"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="26" y="417.377">scenarioPanel: Scenario *</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="423.6973"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="26" y="430.332">paramPanel: ParamPanel *</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="436.6523"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="26" y="443.2871">dataPanel: DataPanel *</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="449.6074"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="26" y="456.2422">loopMode: LoopMode</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="462.5625"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="26" y="469.1973">nPop: Integer</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="475.5176"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="26" y="482.1523">nMesh: Integer</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="488.4727"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="26" y="495.1074">pop: Agent **</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="501.4277"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="26" y="508.0625">pRange: Range *</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="514.3828"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="26" y="521.0176">prevTime: Float</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="527.3379"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="26" y="533.9727">stepsPerSec: Float</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="540.293"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="296" x="26" y="546.9277">newWarpF: MutableDictionary&lt;Number *, WarpInfo *&gt; *</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="553.248"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="275" x="26" y="559.8828">testees: MutableDictionary&lt;Number *, Number *&gt; *</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="566.2031"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="26" y="572.8379">newWarpLock: Lock *</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="579.1582"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="26" y="585.793">testeesLock: Lock *</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="592.1133"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="26" y="598.748">animeSteps: Integer</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="605.0684"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="26" y="611.7031">stopAtNDays: Integer</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="618.0234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="26" y="624.6582">scenario: Array *</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="630.9785"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="26" y="637.6133">predicateToStop: Predicate *</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="643.9336"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="26" y="650.5684">testQueHead: TestEntry *</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="656.8887"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="26" y="663.5234">testQueTail: TestEntry *</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="669.8438"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="26" y="676.4785">dispatchQueue: dispatch_queue_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="682.7988"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="26" y="689.4336">dispatchGroup: dispatch_group_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="695.7539"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="26" y="702.3887">orgWindowSize: Size</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="708.709"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="26" y="715.3438">orgViewSize: Size</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="721.6641"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="26" y="728.2988">runtimeTimer: Timer *</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="121" x="26" y="741.2539">testEntriesLock: Lock *</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="354" y1="747.5742" y2="747.5742"/><ellipse cx="17" cy="758.5742" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="26" y="762.209">running(): Bool</text><ellipse cx="17" cy="771.5293" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="26" y="775.1641">popLock(): void</text><ellipse cx="17" cy="784.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="26" y="788.1191">popUnlock(): void</text><ellipse cx="17" cy="797.4395" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="323" x="26" y="801.0742">testInfectionOfAgent(agent: Agent *, reason: TestType): void</text><ellipse cx="17" cy="810.3945" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="26" y="814.0293">addNewWarp(info: WarpInfo *): void</text><ellipse cx="17" cy="823.3496" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="26" y="826.9844">touch(): Bool</text><ellipse cx="17" cy="836.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="26" y="839.9395">start(stopAt: Integer): void</text><ellipse cx="17" cy="849.2598" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="26" y="852.8945">step(): void</text><ellipse cx="17" cy="862.2148" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="26" y="865.8496">stop(): void</text><ellipse cx="17" cy="875.1699" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="26" y="878.8047">resetPop(): void</text><ellipse cx="17" cy="888.125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="248" x="26" y="891.7598">setScenarioWithPList(plist: Array&lt;any&gt;*): void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="898.0801"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="26" y="904.7148">addOperation(block: void -&gt; void): void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="911.0352"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="26" y="917.6699">waitAllOperations(): void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="923.9902"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="26" y="930.625">addInfected(n: Integer): void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="936.9453"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="26" y="943.5801">execScenario(): void</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="286" x="26" y="956.5352">phase_info(scen: Array&lt;any&gt; *): Array&lt;Number *&gt; *</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="962.8555"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="26" y="969.4902">resetPop(): void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="975.8105"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="26" y="982.4453">init(): instancetype</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="252" x="26" y="995.4004">property_from_element(elm: Object *): Object *</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="259" x="26" y="1008.3555">element_property_from(prop: Object *): Object *</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="1014.6758"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="26" y="1021.3105">scenarioPList(): Array&lt;any&gt; *</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="1027.6309"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="26" y="1034.2656">documentDictionary(): Dictionary *</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="1040.5859"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="26" y="1047.2207">readFromDictionary(dict: Dictionary *)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="1053.541"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="248" x="26" y="1060.1758">deliverTestResults(testCount: UInteger *): void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="1066.4961"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="26" y="1073.1309">gridToGridA(iA: Integer, iB: Integer): void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="1079.4512"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="26" y="1086.0859">doOneStep(): void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="1092.4063"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="26" y="1099.041">runningLoop(): void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="1105.3613"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="26" y="1111.9961">goAhead(): void</text><!--MD5=[9d5861e0d8380dccb8f293ae2e87267a]
class WarpInfo--><rect fill="#FEFECE" filter="url(#f1jej87jrmrh57)" height="99.8203" id="WarpInfo" style="stroke: #A80036; stroke-width: 1.5;" width="360" x="390.5" y="513"/><ellipse cx="540.75" cy="529" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M543.2231,535.1431 Q542.6421,535.4419 542.0029,535.5913 Q541.3638,535.7407 540.6582,535.7407 Q538.1514,535.7407 536.8315,534.0889 Q535.5117,532.437 535.5117,529.3159 Q535.5117,526.1865 536.8315,524.5347 Q538.1514,522.8828 540.6582,522.8828 Q541.3638,522.8828 542.0112,523.0322 Q542.6587,523.1816 543.2231,523.4805 L543.2231,526.2031 Q542.5923,525.6221 541.9988,525.3523 Q541.4053,525.0825 540.7744,525.0825 Q539.4297,525.0825 538.7449,526.1492 Q538.0601,527.2158 538.0601,529.3159 Q538.0601,531.4077 538.7449,532.4744 Q539.4297,533.541 540.7744,533.541 Q541.4053,533.541 541.9988,533.2712 Q542.5923,533.0015 543.2231,532.4204 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="51" x="561.25" y="533.5352">WarpInfo</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="391.5" x2="749.5" y1="545" y2="545"/><ellipse cx="401.5" cy="556" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="410.5" y="559.6348">agent; Agent *</text><ellipse cx="401.5" cy="568.9551" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="56" x="410.5" y="572.5898">goal: Point</text><ellipse cx="401.5" cy="581.9102" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="410.5" y="585.5449">mode: WarpType</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="391.5" x2="749.5" y1="591.8652" y2="591.8652"/><ellipse cx="401.5" cy="602.8652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="334" x="410.5" y="606.5">initWithAgent(a: Agent *, p :Point, md: WarpType): instancetype</text><!--MD5=[dd42996a3234caac89511d729319d42d]
class TableCellView--><rect fill="#FEFECE" filter="url(#f1jej87jrmrh57)" height="48" id="TableCellView" style="stroke: #A80036; stroke-width: 1.5;" width="113" x="1351" y="539"/><ellipse cx="1366" cy="555" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1368.4731,561.1431 Q1367.8921,561.4419 1367.2529,561.5913 Q1366.6138,561.7407 1365.9082,561.7407 Q1363.4014,561.7407 1362.0815,560.0889 Q1360.7617,558.437 1360.7617,555.3159 Q1360.7617,552.1865 1362.0815,550.5347 Q1363.4014,548.8828 1365.9082,548.8828 Q1366.6138,548.8828 1367.2612,549.0322 Q1367.9087,549.1816 1368.4731,549.4805 L1368.4731,552.2031 Q1367.8423,551.6221 1367.2488,551.3523 Q1366.6553,551.0825 1366.0244,551.0825 Q1364.6797,551.0825 1363.9949,552.1492 Q1363.3101,553.2158 1363.3101,555.3159 Q1363.3101,557.4077 1363.9949,558.4744 Q1364.6797,559.541 1366.0244,559.541 Q1366.6553,559.541 1367.2488,559.2712 Q1367.8423,559.0015 1368.4731,558.4204 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="81" x="1380" y="559.5352">TableCellView</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1352" x2="1463" y1="571" y2="571"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1352" x2="1463" y1="579" y2="579"/><!--MD5=[7be63670b88c3e5f7cb8aefe18aa6367]
class ButtonsCellView--><rect fill="#FEFECE" filter="url(#f1jej87jrmrh57)" height="48" id="ButtonsCellView" style="stroke: #A80036; stroke-width: 1.5;" width="122" x="785.5" y="539"/><ellipse cx="800.5" cy="555" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M802.9731,561.1431 Q802.3921,561.4419 801.7529,561.5913 Q801.1138,561.7407 800.4082,561.7407 Q797.9014,561.7407 796.5815,560.0889 Q795.2617,558.437 795.2617,555.3159 Q795.2617,552.1865 796.5815,550.5347 Q797.9014,548.8828 800.4082,548.8828 Q801.1138,548.8828 801.7612,549.0322 Q802.4087,549.1816 802.9731,549.4805 L802.9731,552.2031 Q802.3423,551.6221 801.7488,551.3523 Q801.1553,551.0825 800.5244,551.0825 Q799.1797,551.0825 798.4949,552.1492 Q797.8101,553.2158 797.8101,555.3159 Q797.8101,557.4077 798.4949,558.4744 Q799.1797,559.541 800.5244,559.541 Q801.1553,559.541 801.7488,559.2712 Q802.3423,559.0015 802.9731,558.4204 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="90" x="814.5" y="559.5352">ButtonsCellView</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="786.5" x2="906.5" y1="571" y2="571"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="786.5" x2="906.5" y1="579" y2="579"/><!--MD5=[c153e144dc7c212bfa2eced4bcd56d7a]
class ParameterCellView--><rect fill="#FEFECE" filter="url(#f1jej87jrmrh57)" height="73.9102" id="ParameterCellView" style="stroke: #A80036; stroke-width: 1.5;" width="206" x="1304.5" y="1495.5"/><ellipse cx="1349.25" cy="1511.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1351.7231,1517.6431 Q1351.1421,1517.9419 1350.5029,1518.0913 Q1349.8638,1518.2407 1349.1582,1518.2407 Q1346.6514,1518.2407 1345.3315,1516.5889 Q1344.0117,1514.937 1344.0117,1511.8159 Q1344.0117,1508.6865 1345.3315,1507.0347 Q1346.6514,1505.3828 1349.1582,1505.3828 Q1349.8638,1505.3828 1350.5112,1505.5322 Q1351.1587,1505.6816 1351.7231,1505.9805 L1351.7231,1508.7031 Q1351.0923,1508.1221 1350.4988,1507.8523 Q1349.9053,1507.5825 1349.2744,1507.5825 Q1347.9297,1507.5825 1347.2449,1508.6492 Q1346.5601,1509.7158 1346.5601,1511.8159 Q1346.5601,1513.9077 1347.2449,1514.9744 Q1347.9297,1516.041 1349.2744,1516.041 Q1349.9053,1516.041 1350.4988,1515.7712 Q1351.0923,1515.5015 1351.7231,1514.9204 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="108" x="1369.75" y="1516.0352">ParameterCellView</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1305.5" x2="1509.5" y1="1527.5" y2="1527.5"/><ellipse cx="1315.5" cy="1538.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="1324.5" y="1542.1348">«get» namePopUp: PopUpButton *</text><ellipse cx="1315.5" cy="1551.4551" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="1324.5" y="1555.0898">«get» digits: TextField *</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1305.5" x2="1509.5" y1="1561.4102" y2="1561.4102"/><!--MD5=[043706ceb1d4156b1dc3f75e0dd175a0]
class ScenarioItem--><rect fill="#FEFECE" filter="url(#f1jej87jrmrh57)" height="112.7754" id="ScenarioItem" style="stroke: #A80036; stroke-width: 1.5;" width="219" x="1559" y="1476"/><ellipse cx="1627.75" cy="1492" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1630.2231,1498.1431 Q1629.6421,1498.4419 1629.0029,1498.5913 Q1628.3638,1498.7407 1627.6582,1498.7407 Q1625.1514,1498.7407 1623.8315,1497.0889 Q1622.5117,1495.437 1622.5117,1492.3159 Q1622.5117,1489.1865 1623.8315,1487.5347 Q1625.1514,1485.8828 1627.6582,1485.8828 Q1628.3638,1485.8828 1629.0112,1486.0322 Q1629.6587,1486.1816 1630.2231,1486.4805 L1630.2231,1489.2031 Q1629.5923,1488.6221 1628.9988,1488.3523 Q1628.4053,1488.0825 1627.7744,1488.0825 Q1626.4297,1488.0825 1625.7449,1489.1492 Q1625.0601,1490.2158 1625.0601,1492.3159 Q1625.0601,1494.4077 1625.7449,1495.4744 Q1626.4297,1496.541 1627.7744,1496.541 Q1628.4053,1496.541 1628.9988,1496.2712 Q1629.5923,1496.0015 1630.2231,1495.4204 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="73" x="1648.25" y="1496.5352">ScenarioItem</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1560" x2="1777" y1="1508" y2="1508"/><ellipse cx="1570" cy="1519" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="1579" y="1522.6348">scenario: Scenario *</text><ellipse cx="1570" cy="1531.9551" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="1579" y="1535.5898">«get/set» view: TableCellView</text><ellipse cx="1570" cy="1544.9102" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="1579" y="1548.5449">«get» lnView: TableCellView</text><ellipse cx="1570" cy="1557.8652" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="1579" y="1561.5">«get» btnsView: ButtonsCellView</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1560" x2="1777" y1="1567.8203" y2="1567.8203"/><ellipse cx="1570" cy="1578.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="1579" y="1582.4551">buttonAction(button: Button *): void</text><!--MD5=[22ca65a65ef5c333991ffdf14d22e420]
class CondElmItem--><rect fill="#FEFECE" filter="url(#f1jej87jrmrh57)" height="60.9551" id="CondElmItem" style="stroke: #A80036; stroke-width: 1.5;" width="198" x="1569.5" y="1963"/><ellipse cx="1626.25" cy="1979" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1628.7231,1985.1431 Q1628.1421,1985.4419 1627.5029,1985.5913 Q1626.8638,1985.7407 1626.1582,1985.7407 Q1623.6514,1985.7407 1622.3315,1984.0889 Q1621.0117,1982.437 1621.0117,1979.3159 Q1621.0117,1976.1865 1622.3315,1974.5347 Q1623.6514,1972.8828 1626.1582,1972.8828 Q1626.8638,1972.8828 1627.5112,1973.0322 Q1628.1587,1973.1816 1628.7231,1973.4805 L1628.7231,1976.2031 Q1628.0923,1975.6221 1627.4988,1975.3523 Q1626.9053,1975.0825 1626.2744,1975.0825 Q1624.9297,1975.0825 1624.2449,1976.1492 Q1623.5601,1977.2158 1623.5601,1979.3159 Q1623.5601,1981.4077 1624.2449,1982.4744 Q1624.9297,1983.541 1626.2744,1983.541 Q1626.9053,1983.541 1627.4988,1983.2712 Q1628.0923,1983.0015 1628.7231,1982.4204 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="76" x="1646.75" y="1983.5352">CondElmItem</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1570.5" x2="1766.5" y1="1995" y2="1995"/><ellipse cx="1580.5" cy="2006" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="1589.5" y="2009.6348">«get/set» parent: ScenarioItem *</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1570.5" x2="1766.5" y1="2015.9551" y2="2015.9551"/><!--MD5=[2bfe378e7de03eff9953aa931a850d0e]
class ComparisonItem--><rect fill="#FEFECE" filter="url(#f1jej87jrmrh57)" height="112.7754" id="ComparisonItem" style="stroke: #A80036; stroke-width: 1.5;" width="126" x="1460.5" y="2100"/><ellipse cx="1475.5" cy="2116" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1477.9731,2122.1431 Q1477.3921,2122.4419 1476.7529,2122.5913 Q1476.1138,2122.7407 1475.4082,2122.7407 Q1472.9014,2122.7407 1471.5815,2121.0889 Q1470.2617,2119.437 1470.2617,2116.3159 Q1470.2617,2113.1865 1471.5815,2111.5347 Q1472.9014,2109.8828 1475.4082,2109.8828 Q1476.1138,2109.8828 1476.7612,2110.0322 Q1477.4087,2110.1816 1477.9731,2110.4805 L1477.9731,2113.2031 Q1477.3423,2112.6221 1476.7488,2112.3523 Q1476.1553,2112.0825 1475.5244,2112.0825 Q1474.1797,2112.0825 1473.4949,2113.1492 Q1472.8101,2114.2158 1472.8101,2116.3159 Q1472.8101,2118.4077 1473.4949,2119.4744 Q1474.1797,2120.541 1475.5244,2120.541 Q1476.1553,2120.541 1476.7488,2120.2712 Q1477.3423,2120.0015 1477.9731,2119.4204 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="94" x="1489.5" y="2120.5352">ComparisonItem</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1461.5" x2="1585.5" y1="2132" y2="2132"/><ellipse cx="1471.5" cy="2143" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="1480.5" y="2146.6348">varIndex: Integer</text><ellipse cx="1471.5" cy="2155.9551" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="1480.5" y="2159.5898">opeIndex: Integer</text><ellipse cx="1471.5" cy="2168.9102" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="1480.5" y="2172.5449">maxValue: Integer</text><ellipse cx="1471.5" cy="2181.8652" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="1480.5" y="2185.5">ratioValue: Float</text><ellipse cx="1471.5" cy="2194.8203" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="1480.5" y="2198.4551">days: Integer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1461.5" x2="1585.5" y1="2204.7754" y2="2204.7754"/><!--MD5=[570ae5da1ef4ef0a7d1e09e26ab504c3]
class CompoundItem--><rect fill="#FEFECE" filter="url(#f1jej87jrmrh57)" height="73.9102" id="CompoundItem" style="stroke: #A80036; stroke-width: 1.5;" width="386" x="1621.5" y="2119.5"/><ellipse cx="1766.25" cy="2135.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1768.7231,2141.6431 Q1768.1421,2141.9419 1767.5029,2142.0913 Q1766.8638,2142.2407 1766.1582,2142.2407 Q1763.6514,2142.2407 1762.3315,2140.5889 Q1761.0117,2138.937 1761.0117,2135.8159 Q1761.0117,2132.6865 1762.3315,2131.0347 Q1763.6514,2129.3828 1766.1582,2129.3828 Q1766.8638,2129.3828 1767.5112,2129.5322 Q1768.1587,2129.6816 1768.7231,2129.9805 L1768.7231,2132.7031 Q1768.0923,2132.1221 1767.4988,2131.8523 Q1766.9053,2131.5825 1766.2744,2131.5825 Q1764.9297,2131.5825 1764.2449,2132.6492 Q1763.5601,2133.7158 1763.5601,2135.8159 Q1763.5601,2137.9077 1764.2449,2138.9744 Q1764.9297,2140.041 1766.2744,2140.041 Q1766.9053,2140.041 1767.4988,2139.7712 Q1768.0923,2139.5015 1768.7231,2138.9204 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="88" x="1786.75" y="2140.0352">CompoundItem</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1622.5" x2="2006.5" y1="2151.5" y2="2151.5"/><ellipse cx="1632.5" cy="2162.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="1641.5" y="2166.1348">«get/set» children: MutableArray&lt;CondElmItem *&gt; *</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1622.5" x2="2006.5" y1="2172.4551" y2="2172.4551"/><ellipse cx="1632.5" cy="2183.4551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="1641.5" y="2187.0898">replaceChildAtIndex(index: Integer, newChild: CondElmItem *): void</text><!--MD5=[cc5599137e8e7827e7000fa00bbeb77b]
class CondItem--><rect fill="#FEFECE" filter="url(#f1jej87jrmrh57)" height="112.7754" id="CondItem" style="stroke: #A80036; stroke-width: 1.5;" width="338" x="1499.5" y="506.5"/><ellipse cx="1636.75" cy="522.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1639.2231,528.6431 Q1638.6421,528.9419 1638.0029,529.0913 Q1637.3638,529.2407 1636.6582,529.2407 Q1634.1514,529.2407 1632.8315,527.5889 Q1631.5117,525.937 1631.5117,522.8159 Q1631.5117,519.6865 1632.8315,518.0347 Q1634.1514,516.3828 1636.6582,516.3828 Q1637.3638,516.3828 1638.0112,516.5322 Q1638.6587,516.6816 1639.2231,516.9805 L1639.2231,519.7031 Q1638.5923,519.1221 1637.9988,518.8523 Q1637.4053,518.5825 1636.7744,518.5825 Q1635.4297,518.5825 1634.7449,519.6492 Q1634.0601,520.7158 1634.0601,522.8159 Q1634.0601,524.9077 1634.7449,525.9744 Q1635.4297,527.041 1636.7744,527.041 Q1637.4053,527.041 1637.9988,526.7712 Q1638.5923,526.5015 1639.2231,525.9204 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="55" x="1657.25" y="527.0352">CondItem</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1500.5" x2="1836.5" y1="538.5" y2="538.5"/><ellipse cx="1510.5" cy="549.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="1519.5" y="553.1348">condType: CondType</text><ellipse cx="1510.5" cy="562.4551" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="1519.5" y="566.0898">destination: Integer</text><ellipse cx="1510.5" cy="575.4102" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="1519.5" y="579.0449">«get/set» element: CondElmItem *</text><ellipse cx="1510.5" cy="588.3652" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="1519.5" y="592">«get/set» predicate: Predicate *</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1500.5" x2="1836.5" y1="598.3203" y2="598.3203"/><ellipse cx="1510.5" cy="609.3203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="1519.5" y="612.9551">replaceElementWithItem(newElement: CondElmItem *): void</text><!--MD5=[5bce4d604ec1caae5d991fc683175e0b]
class WindowController--><rect fill="#FEFECE" filter="url(#f1jej87jrmrh57)" height="48" id="WindowController" style="stroke: #A80036; stroke-width: 1.5;" width="132" x="1972.5" y="539"/><ellipse cx="1987.5" cy="555" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1989.9731,561.1431 Q1989.3921,561.4419 1988.7529,561.5913 Q1988.1138,561.7407 1987.4082,561.7407 Q1984.9014,561.7407 1983.5815,560.0889 Q1982.2617,558.437 1982.2617,555.3159 Q1982.2617,552.1865 1983.5815,550.5347 Q1984.9014,548.8828 1987.4082,548.8828 Q1988.1138,548.8828 1988.7612,549.0322 Q1989.4087,549.1816 1989.9731,549.4805 L1989.9731,552.2031 Q1989.3423,551.6221 1988.7488,551.3523 Q1988.1553,551.0825 1987.5244,551.0825 Q1986.1797,551.0825 1985.4949,552.1492 Q1984.8101,553.2158 1984.8101,555.3159 Q1984.8101,557.4077 1985.4949,558.4744 Q1986.1797,559.541 1987.5244,559.541 Q1988.1553,559.541 1988.7488,559.2712 Q1989.3423,559.0015 1989.9731,558.4204 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="100" x="2001.5" y="559.5352">WindowController</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1973.5" x2="2103.5" y1="571" y2="571"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1973.5" x2="2103.5" y1="579" y2="579"/><!--MD5=[3618a374bd976662547feba7b42f282d]
class Scenario--><rect fill="#FEFECE" filter="url(#f1jej87jrmrh57)" height="242.3262" id="Scenario" style="stroke: #A80036; stroke-width: 1.5;" width="451" x="1813" y="1411.5"/><ellipse cx="2010.25" cy="1427.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2012.7231,1433.6431 Q2012.1421,1433.9419 2011.5029,1434.0913 Q2010.8638,1434.2407 2010.1582,1434.2407 Q2007.6514,1434.2407 2006.3315,1432.5889 Q2005.0117,1430.937 2005.0117,1427.8159 Q2005.0117,1424.6865 2006.3315,1423.0347 Q2007.6514,1421.3828 2010.1582,1421.3828 Q2010.8638,1421.3828 2011.5112,1421.5322 Q2012.1587,1421.6816 2012.7231,1421.9805 L2012.7231,1424.7031 Q2012.0923,1424.1221 2011.4988,1423.8523 Q2010.9053,1423.5825 2010.2744,1423.5825 Q2008.9297,1423.5825 2008.2449,1424.6492 Q2007.5601,1425.7158 2007.5601,1427.8159 Q2007.5601,1429.9077 2008.2449,1430.9744 Q2008.9297,1432.041 2010.2744,1432.041 Q2010.9053,1432.041 2011.4988,1431.7712 Q2012.0923,1431.5015 2012.7231,1430.9204 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="48" x="2030.75" y="1432.0352">Scenario</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1814" x2="2263" y1="1443.5" y2="1443.5"/><ellipse cx="1824" cy="1454.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="1833" y="1458.1348">shiftUpBtn: Button *</text><ellipse cx="1824" cy="1467.4551" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="1833" y="1471.0898">shiftDownBtn: Button *</text><ellipse cx="1824" cy="1480.4102" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="1833" y="1484.0449">deselectBtn: Button *</text><ellipse cx="1824" cy="1493.3652" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="1833" y="1497">removeBtn: Button *</text><ellipse cx="1824" cy="1506.3203" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="1833" y="1509.9551">applyBtn: Button *</text><ellipse cx="1824" cy="1519.2754" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="1833" y="1522.9102">«get/set» outlineView: OutlineView *</text><ellipse cx="1824" cy="1532.2305" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="1833" y="1535.8652">«get» doc: Document *</text><ellipse cx="1824" cy="1545.1855" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="1833" y="1548.8203">«get» undoManager: UndoManager *</text><ellipse cx="1824" cy="1558.1406" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="1833" y="1561.7754">«get» intFormatter: NumberFormatter *</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1814" x2="2263" y1="1568.0957" y2="1568.0957"/><ellipse cx="1824" cy="1579.0957" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="1833" y="1582.7305">initWithDoc(dc: Document *): instancetype</text><ellipse cx="1824" cy="1592.0508" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="1833" y="1595.6855">adjustControls(undoOrRedo: BOOL): void</text><ellipse cx="1824" cy="1605.0059" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="1833" y="1608.6406">numberOfItems(): Integer</text><ellipse cx="1824" cy="1617.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="1833" y="1621.5957">removeItem(item: ScenarioItem *): void</text><ellipse cx="1824" cy="1630.916" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="425" x="1833" y="1634.5508">itemWithPredicate(predicate: Predicate *, parent: ScenarioItem *): CondElmItem *</text><ellipse cx="1824" cy="1643.8711" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="1833" y="1647.5059">setScenarioWithArray(array: Array&lt;any&gt; *): void</text><!--MD5=[81c3ea6bfcda5fa81c079989da1bd5d3]
class MyCounter--><rect fill="#FEFECE" filter="url(#f1jej87jrmrh57)" height="112.7754" id="MyCounter" style="stroke: #A80036; stroke-width: 1.5;" width="141" x="943" y="506.5"/><ellipse cx="979.6" cy="522.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M982.0731,528.6431 Q981.4921,528.9419 980.8529,529.0913 Q980.2138,529.2407 979.5082,529.2407 Q977.0014,529.2407 975.6815,527.5889 Q974.3617,525.937 974.3617,522.8159 Q974.3617,519.6865 975.6815,518.0347 Q977.0014,516.3828 979.5082,516.3828 Q980.2138,516.3828 980.8612,516.5322 Q981.5087,516.6816 982.0731,516.9805 L982.0731,519.7031 Q981.4423,519.1221 980.8488,518.8523 Q980.2553,518.5825 979.6244,518.5825 Q978.2797,518.5825 977.5949,519.6492 Q976.9101,520.7158 976.9101,522.8159 Q976.9101,524.9077 977.5949,525.9744 Q978.2797,527.041 979.6244,527.041 Q980.2553,527.041 980.8488,526.7712 Q981.4423,526.5015 982.0731,525.9204 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="61" x="998.4" y="527.0352">MyCounter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="944" x2="1083" y1="538.5" y2="538.5"/><ellipse cx="954" cy="549.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="963" y="553.1348">«get/set» cnt: Integer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="944" x2="1083" y1="559.4551" y2="559.4551"/><ellipse cx="954" cy="570.4551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="963" y="574.0898">inc(): void</text><ellipse cx="954" cy="583.4102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="56" x="963" y="587.0449">dec(): void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="951" y="593.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="963" y="600">init(): instancetype</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="951" y="606.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="963" y="612.9551">description(): String *</text><!--MD5=[40b3c0d6088dae502ea40a610f91e280]
class InfectionCntInfo--><rect fill="#FEFECE" filter="url(#f1jej87jrmrh57)" height="80.1758" id="InfectionCntInfo" style="stroke: #A80036; stroke-width: 1.5;" width="120" x="120.5" y="1492.5"/><ellipse cx="135.5" cy="1511.6328" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M137.9731,1517.7759 Q137.3921,1518.0747 136.7529,1518.2241 Q136.1138,1518.3735 135.4082,1518.3735 Q132.9014,1518.3735 131.5815,1516.7217 Q130.2617,1515.0698 130.2617,1511.9487 Q130.2617,1508.8193 131.5815,1507.1675 Q132.9014,1505.5156 135.4082,1505.5156 Q136.1138,1505.5156 136.7612,1505.665 Q137.4087,1505.8145 137.9731,1506.1133 L137.9731,1508.8359 Q137.3423,1508.2549 136.7488,1507.9851 Q136.1553,1507.7153 135.5244,1507.7153 Q134.1797,1507.7153 133.4949,1508.782 Q132.8101,1509.8486 132.8101,1511.9487 Q132.8101,1514.0405 133.4949,1515.1072 Q134.1797,1516.1738 135.5244,1516.1738 Q136.1553,1516.1738 136.7488,1515.9041 Q137.3423,1515.6343 137.9731,1515.0532 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="44" x="171.5" y="1509.1016">«struct»</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="88" x="149.5" y="1523.2344">InfectionCntInfo</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="121.5" x2="239.5" y1="1530.7656" y2="1530.7656"/><ellipse cx="131.5" cy="1541.7656" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="140.5" y="1545.4004">orgV: int</text><ellipse cx="131.5" cy="1554.7207" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="48" x="140.5" y="1558.3555">newV: int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="121.5" x2="239.5" y1="1564.6758" y2="1564.6758"/><!--MD5=[5eb016efd7cf6561873f3f0ebacf3bdf]
class InfectionExtension--><rect fill="#FEFECE" filter="url(#f1jej87jrmrh57)" height="73.9102" id="InfectionExtension" style="stroke: #A80036; stroke-width: 1.5;" width="272" x="275.5" y="1495.5"/><ellipse cx="355.75" cy="1511.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M358.2231,1517.6431 Q357.6421,1517.9419 357.0029,1518.0913 Q356.3638,1518.2407 355.6582,1518.2407 Q353.1514,1518.2407 351.8315,1516.5889 Q350.5117,1514.937 350.5117,1511.8159 Q350.5117,1508.6865 351.8315,1507.0347 Q353.1514,1505.3828 355.6582,1505.3828 Q356.3638,1505.3828 357.0112,1505.5322 Q357.6587,1505.6816 358.2231,1505.9805 L358.2231,1508.7031 Q357.5923,1508.1221 356.9988,1507.8523 Q356.4053,1507.5825 355.7744,1507.5825 Q354.4297,1507.5825 353.7449,1508.6492 Q353.0601,1509.7158 353.0601,1511.8159 Q353.0601,1513.9077 353.7449,1514.9744 Q354.4297,1516.041 355.7744,1516.041 Q356.4053,1516.041 356.9988,1515.7712 Q357.5923,1515.5015 358.2231,1514.9204 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="103" x="376.25" y="1516.0352">InfectionExtension</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="276.5" x2="546.5" y1="1527.5" y2="1527.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="276.5" x2="546.5" y1="1535.5" y2="1535.5"/><ellipse cx="286.5" cy="1546.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="295.5" y="1550.1348">valueWithInfect(info: InfectionCntInfo): Value *</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="283.5" y="1556.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="295.5" y="1563.0898">infectValue(): InfectionCntInfo</text><!--MD5=[460d1e8668cf3b6532dd1ebc07930a53]
class StatInfo--><rect fill="#FEFECE" filter="url(#f1jej87jrmrh57)" height="708.709" id="StatInfo" style="stroke: #A80036; stroke-width: 1.5;" width="542" x="582.5" y="1178"/><ellipse cx="828.25" cy="1194" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M830.7231,1200.1431 Q830.1421,1200.4419 829.5029,1200.5913 Q828.8638,1200.7407 828.1582,1200.7407 Q825.6514,1200.7407 824.3315,1199.0889 Q823.0117,1197.437 823.0117,1194.3159 Q823.0117,1191.1865 824.3315,1189.5347 Q825.6514,1187.8828 828.1582,1187.8828 Q828.8638,1187.8828 829.5112,1188.0322 Q830.1587,1188.1816 830.7231,1188.4805 L830.7231,1191.2031 Q830.0923,1190.6221 829.4988,1190.3523 Q828.9053,1190.0825 828.2744,1190.0825 Q826.9297,1190.0825 826.2449,1191.1492 Q825.5601,1192.2158 825.5601,1194.3159 Q825.5601,1196.4077 826.2449,1197.4744 Q826.9297,1198.541 828.2744,1198.541 Q828.9053,1198.541 829.4988,1198.2712 Q830.0923,1198.0015 830.7231,1197.4204 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="42" x="848.75" y="1198.5352">StatInfo</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="583.5" x2="1123.5" y1="1210" y2="1210"/><ellipse cx="593.5" cy="1221" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="602.5" y="1224.6348">_doc: Document *</text><ellipse cx="593.5" cy="1233.9551" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="602.5" y="1237.5898">maxCounts: UInteger[NIntIndexes]</text><ellipse cx="593.5" cy="1246.9102" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="602.5" y="1250.5449">maxTransit: UInteger[NIntIndexes]</text><ellipse cx="593.5" cy="1259.8652" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="602.5" y="1263.5">imgBm: unsigned char *</text><ellipse cx="593.5" cy="1272.8203" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="602.5" y="1276.4551">popSize: Integer</text><ellipse cx="593.5" cy="1285.7754" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="602.5" y="1289.4102">steps: Integer</text><ellipse cx="593.5" cy="1298.7305" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="602.5" y="1302.3652">skip: Integer</text><ellipse cx="593.5" cy="1311.6855" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="602.5" y="1315.3203">days: Integer</text><ellipse cx="593.5" cy="1324.6406" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="602.5" y="1328.2754">skipDays: Integer</text><ellipse cx="593.5" cy="1337.5957" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="602.5" y="1341.2305">statCumm: StatData</text><ellipse cx="593.5" cy="1350.5508" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="602.5" y="1354.1855">transDaily: StatData</text><ellipse cx="593.5" cy="1363.5059" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="602.5" y="1367.1406">transCumm: StatData</text><ellipse cx="593.5" cy="1376.4609" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="602.5" y="1380.0957">testCumm: UInteger[NIntTestTypes]</text><ellipse cx="593.5" cy="1389.416" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="602.5" y="1393.0508">testResultsW: TestResultCount[7]</text><ellipse cx="593.5" cy="1402.3711" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="602.5" y="1406.0059">maxStepPRate: Float</text><ellipse cx="593.5" cy="1415.3262" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="602.5" y="1418.9609">maxDailyPRate: Float</text><ellipse cx="593.5" cy="1428.2813" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="602.5" y="1431.916">pRateCumm: Float</text><ellipse cx="593.5" cy="1441.2363" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="602.5" y="1444.8711">phaseInfo: NSArray&lt;NSNumber *&gt; *</text><ellipse cx="593.5" cy="1454.1914" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="602.5" y="1457.8262">scenarioPhases: MutableArray&lt;NSNumber *&gt; *</text><ellipse cx="593.5" cy="1467.1465" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="284" x="602.5" y="1470.7813">«get» scenarioPhases: MutableArray&lt;NSNumber *&gt; *</text><ellipse cx="593.5" cy="1480.1016" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="602.5" y="1483.7363">«get» statistics: StatData *</text><ellipse cx="593.5" cy="1493.0566" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="602.5" y="1496.6914">«get» transit: StatData *</text><ellipse cx="593.5" cy="1506.0117" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="602.5" y="1509.6465">«get» testResultCnt: TestResultCount</text><ellipse cx="593.5" cy="1518.9668" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="602.5" y="1522.6016">«get» IncubPHist: MutableArray&lt;MyCounter *&gt; *</text><ellipse cx="593.5" cy="1531.9219" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="602.5" y="1535.5566">«get» RecovPHist: MutableArray&lt;MyCounter *&gt; *</text><ellipse cx="593.5" cy="1544.877" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="602.5" y="1548.5117">«get» DeathPHist: MutableArray&lt;MyCounter *&gt; *</text><ellipse cx="593.5" cy="1557.832" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="268" x="602.5" y="1561.4668">«get» NInfectsHist: MutableArray&lt;MyCounter *&gt; *</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="583.5" x2="1123.5" y1="1567.7871" y2="1567.7871"/><ellipse cx="593.5" cy="1578.7871" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="602.5" y="1582.4219">doc(): Document *</text><ellipse cx="593.5" cy="1591.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="602.5" y="1595.377">reviseColors(): void</text><ellipse cx="593.5" cy="1604.6973" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="269" x="602.5" y="1608.332">reset(nPop : NSInteger, nInitInfec, :NSInteger): void</text><ellipse cx="593.5" cy="1617.6523" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="602.5" y="1621.2871">setPhaseInfo(info: Array&lt;NSNumber *&gt; *): void</text><ellipse cx="593.5" cy="1630.6074" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="237" x="602.5" y="1634.2422">phaseChangedTo(lineNumber: Integer): void</text><ellipse cx="593.5" cy="1643.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="516" x="602.5" y="1647.1973">calcStatWithTestCount(testCount: UInteger *, infects: NSArray&lt;NSArray&lt;NSValue *&gt; *&gt; *): BOOL</text><ellipse cx="593.5" cy="1656.5176" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="602.5" y="1660.1523">skipSteps(): Integer</text><ellipse cx="593.5" cy="1669.4727" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="602.5" y="1673.1074">skipDays(): Integer</text><ellipse cx="593.5" cy="1682.4277" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="602.5" y="1686.0625">setDoc(doc: Document *): void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="590.5" y="1692.3828"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="602.5" y="1699.0176">init(): instancetype</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="590.5" y="1705.3379"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="602.5" y="1711.9727">setDoc(docu: Document *): void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="590.5" y="1718.293"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="602.5" y="1724.9277">fillImageForOneStep(stat: StatData *, ix: Integer): void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="590.5" y="1731.248"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="602.5" y="1737.8828">susceptible(): Integer</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="590.5" y="1744.2031"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="602.5" y="1750.8379">infected(): Integer</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="590.5" y="1757.1582"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="602.5" y="1763.793">symptomatic(): Integer</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="590.5" y="1770.1133"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="602.5" y="1776.748">recovered(): Integer</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="590.5" y="1783.0684"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="602.5" y="1789.7031">died(): Integer</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="590.5" y="1796.0234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="602.5" y="1802.6582">quarantine(): Integer</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="590.5" y="1808.9785"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="602.5" y="1815.6133">dailyInfection(): Integer</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="590.5" y="1821.9336"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="602.5" y="1828.5684">dailySymptomatic(): Integer</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="590.5" y="1834.8887"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="602.5" y="1841.5234">dailyRecovery(): Integer</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="590.5" y="1847.8438"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="602.5" y="1854.4785">dailyDeath(): Integer</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="590.5" y="1860.7988"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="602.5" y="1867.4336">weeklyPositive(): Integer</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="590.5" y="1873.7539"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="602.5" y="1880.3887">weeklyPositiveRate(): Float</text><!--MD5=[53e8e334745db4477336abb3469cd8bd]
class ParamType--><rect fill="#FEFECE" filter="url(#f1jej87jrmrh57)" height="112.7754" id="ParamType" style="stroke: #A80036; stroke-width: 1.5;" width="109" x="1160" y="1476"/><ellipse cx="1179.95" cy="1492" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1183.5643,1498.5 L1175.8445,1498.5 L1175.8445,1486.1069 L1183.5643,1486.1069 L1183.5643,1488.2651 L1178.2933,1488.2651 L1178.2933,1490.938 L1183.0662,1490.938 L1183.0662,1493.0962 L1178.2933,1493.0962 L1178.2933,1496.3418 L1183.5643,1496.3418 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="66" x="1195.05" y="1496.5352">ParamType</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1161" x2="1268" y1="1508" y2="1508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="1166" y="1522.6348">ParamTypeNone</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="1166" y="1535.5898">ParamTypeFloat</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="1166" y="1548.5449">ParamTypeFloatS</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="1166" y="1561.5">ParamTypeDist</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="1166" y="1574.4551">ParamTypeInteger</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1161" x2="1268" y1="1580.7754" y2="1580.7754"/><!--MD5=[8d919f42174a8592853f0e252dac1126]
class S--><rect fill="#FEFECE" filter="url(#f1jej87jrmrh57)" height="86.8652" id="S" style="stroke: #A80036; stroke-width: 1.5;" width="105" x="128" y="1950"/><ellipse cx="167.75" cy="1966" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M170.2231,1972.1431 Q169.6421,1972.4419 169.0029,1972.5913 Q168.3638,1972.7407 167.6582,1972.7407 Q165.1514,1972.7407 163.8315,1971.0889 Q162.5117,1969.437 162.5117,1966.3159 Q162.5117,1963.1865 163.8315,1961.5347 Q165.1514,1959.8828 167.6582,1959.8828 Q168.3638,1959.8828 169.0112,1960.0322 Q169.6587,1960.1816 170.2231,1960.4805 L170.2231,1963.2031 Q169.5923,1962.6221 168.9988,1962.3523 Q168.4053,1962.0825 167.7744,1962.0825 Q166.4297,1962.0825 165.7449,1963.1492 Q165.0601,1964.2158 165.0601,1966.3159 Q165.0601,1968.4077 165.7449,1969.4744 Q166.4297,1970.541 167.7744,1970.541 Q168.4053,1970.541 168.9988,1970.2712 Q169.5923,1970.0015 170.2231,1969.4204 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="6" x="187.25" y="1970.5352">S</text><rect fill="#FFFFFF" height="16.1328" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="10" x="226" y="1947"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="8" x="227" y="1959.6016">T</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="129" x2="232" y1="1982" y2="1982"/><ellipse cx="139" cy="1993" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="148" y="1996.6348">defaultValue: T</text><ellipse cx="139" cy="2005.9551" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="148" y="2009.5898">minValue: T</text><ellipse cx="139" cy="2018.9102" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="148" y="2022.5449">maxValue: T</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="129" x2="232" y1="2028.8652" y2="2028.8652"/><!--MD5=[44edf26fa8e5d5c99ec740b5b9de6d9f]
class St--><rect fill="#FEFECE" filter="url(#f1jej87jrmrh57)" height="86.8652" id="St" style="stroke: #A80036; stroke-width: 1.5;" width="90" x="268.5" y="1950"/><ellipse cx="305.1" cy="1966" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M307.5731,1972.1431 Q306.9921,1972.4419 306.3529,1972.5913 Q305.7138,1972.7407 305.0082,1972.7407 Q302.5014,1972.7407 301.1815,1971.0889 Q299.8617,1969.437 299.8617,1966.3159 Q299.8617,1963.1865 301.1815,1961.5347 Q302.5014,1959.8828 305.0082,1959.8828 Q305.7138,1959.8828 306.3612,1960.0322 Q307.0087,1960.1816 307.5731,1960.4805 L307.5731,1963.2031 Q306.9423,1962.6221 306.3488,1962.3523 Q305.7553,1962.0825 305.1244,1962.0825 Q303.7797,1962.0825 303.0949,1963.1492 Q302.4101,1964.2158 302.4101,1966.3159 Q302.4101,1968.4077 303.0949,1969.4744 Q303.7797,1970.541 305.1244,1970.541 Q305.7553,1970.541 306.3488,1970.2712 Q306.9423,1970.0015 307.5731,1969.4204 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="10" x="323.9" y="1970.5352">St</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="269.5" x2="357.5" y1="1982" y2="1982"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="274.5" y="1996.6348">defMin: Float</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="274.5" y="2009.5898">defMode: Float</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="274.5" y="2022.5449">defMax: Float</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="269.5" x2="357.5" y1="2028.8652" y2="2028.8652"/><!--MD5=[cb048f2f0808f69fa4a123cbde1f5e03]
class ParamInfo--><rect fill="#FEFECE" filter="url(#f1jej87jrmrh57)" height="93.1309" id="ParamInfo" style="stroke: #A80036; stroke-width: 1.5;" width="180" x="393.5" y="1947"/><ellipse cx="450.25" cy="1966.1328" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M452.7231,1972.2759 Q452.1421,1972.5747 451.5029,1972.7241 Q450.8638,1972.8735 450.1582,1972.8735 Q447.6514,1972.8735 446.3315,1971.2217 Q445.0117,1969.5698 445.0117,1966.4487 Q445.0117,1963.3193 446.3315,1961.6675 Q447.6514,1960.0156 450.1582,1960.0156 Q450.8638,1960.0156 451.5112,1960.165 Q452.1587,1960.3145 452.7231,1960.6133 L452.7231,1963.3359 Q452.0923,1962.7549 451.4988,1962.4851 Q450.9053,1962.2153 450.2744,1962.2153 Q448.9297,1962.2153 448.2449,1963.282 Q447.5601,1964.3486 447.5601,1966.4487 Q447.5601,1968.5405 448.2449,1969.6072 Q448.9297,1970.6738 450.2744,1970.6738 Q450.9053,1970.6738 451.4988,1970.4041 Q452.0923,1970.1343 452.7231,1969.5532 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="44" x="477.75" y="1963.6016">«struct»</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="58" x="470.75" y="1977.7344">ParamInfo</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="394.5" x2="572.5" y1="1985.2656" y2="1985.2656"/><ellipse cx="404.5" cy="1996.2656" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="413.5" y="1999.9004">type: ParamType</text><ellipse cx="404.5" cy="2009.2207" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="56" x="413.5" y="2012.8555">key: String</text><ellipse cx="404.5" cy="2022.1758" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="413.5" y="2025.8105">v: S&lt;Float&gt; | St | S&lt;Integer&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="394.5" x2="572.5" y1="2032.1309" y2="2032.1309"/><!--MD5=[c01dcf3d57a4a52b3bfa5fde8363aecc]
class AppDelegate--><rect fill="#FEFECE" filter="url(#f1jej87jrmrh57)" height="60.9551" id="AppDelegate" style="stroke: #A80036; stroke-width: 1.5;" width="372" x="608.5" y="1963"/><ellipse cx="752.75" cy="1979" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M755.2231,1985.1431 Q754.6421,1985.4419 754.0029,1985.5913 Q753.3638,1985.7407 752.6582,1985.7407 Q750.1514,1985.7407 748.8315,1984.0889 Q747.5117,1982.437 747.5117,1979.3159 Q747.5117,1976.1865 748.8315,1974.5347 Q750.1514,1972.8828 752.6582,1972.8828 Q753.3638,1972.8828 754.0112,1973.0322 Q754.6587,1973.1816 755.2231,1973.4805 L755.2231,1976.2031 Q754.5923,1975.6221 753.9988,1975.3523 Q753.4053,1975.0825 752.7744,1975.0825 Q751.4297,1975.0825 750.7449,1976.1492 Q750.0601,1977.2158 750.0601,1979.3159 Q750.0601,1981.4077 750.7449,1982.4744 Q751.4297,1983.541 752.7744,1983.541 Q753.4053,1983.541 753.9988,1983.2712 Q754.5923,1983.0015 755.2231,1982.4204 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="75" x="773.25" y="1983.5352">AppDelegate</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="609.5" x2="979.5" y1="1995" y2="1995"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="609.5" x2="979.5" y1="2003" y2="2003"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="616.5" y="2011"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="346" x="628.5" y="2017.6348">applicationWillFinishLaunching(aNotification: Notification *): void</text><!--MD5=[8fba44676e34cc24b934f67656aeddc8]
reverse link TableCellView to ParameterCellView--><path d="M1407.5,607.45 C1407.5,770.65 1407.5,1345.35 1407.5,1495.43 " fill="none" id="TableCellView&lt;-ParameterCellView" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1400.5,607.44,1407.5,587.44,1414.5,607.44,1400.5,607.44" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[98e8aeabbb8e443c65d091902001c788]
reverse link ScenarioItem to CondElmItem--><path d="M1668.5,1609.5 C1668.5,1712.66 1668.5,1892.24 1668.5,1962.81 " fill="none" id="ScenarioItem&lt;-CondElmItem" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1661.5,1609.32,1668.5,1589.32,1675.5,1609.32,1661.5,1609.32" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d5222a62fd1c5b169ccb4fb5ac3a04f2]
reverse link CondElmItem to ComparisonItem--><path d="M1628.48,2038.93 C1611.54,2057.75 1591.61,2079.88 1573.69,2099.77 " fill="none" id="CondElmItem&lt;-ComparisonItem" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1623.32,2034.21,1641.9,2024.03,1633.72,2043.58,1623.32,2034.21" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[12e934edff4da7109d8ff033d65a684c]
reverse link CondElmItem to CompoundItem--><path d="M1708.77,2038.9 C1731.74,2064.24 1760.17,2095.58 1781.76,2119.39 " fill="none" id="CondElmItem&lt;-CompoundItem" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1703.53,2043.55,1695.28,2024.03,1713.9,2034.14,1703.53,2043.55" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5e6da29b2872d704d88b031c989fa969]
reverse link CondItem to ScenarioItem--><path d="M1668.5,639.97 C1668.5,828.01 1668.5,1311.76 1668.5,1475.99 " fill="none" id="CondItem&lt;-ScenarioItem" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1661.5,639.84,1668.5,619.84,1675.5,639.84,1661.5,639.84" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[589fbed6e1ad28f273e0b7a4b52657c3]
reverse link WindowController to Scenario--><path d="M2038.5,607.71 C2038.5,748.74 2038.5,1195.02 2038.5,1411.46 " fill="none" id="WindowController&lt;-Scenario" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2031.5,607.44,2038.5,587.44,2045.5,607.44,2031.5,607.44" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f127fdfc907829d791ea23c21942e143]
link Document to WarpInfo--><!--MD5=[6d686a70f882dc2eb9bdd0637a8f0947]
link WarpInfo to ButtonsCellView--><!--MD5=[91ead4f87fd92d6a12ea8c4e70b97159]
link ButtonsCellView to MyCounter--><!--MD5=[e638352e1ac17cae29aae6ca2ee34adc]
link Document to InfectionCntInfo--><!--MD5=[3da2f6540c1b7c526733ed4c4180a307]
link InfectionCntInfo to InfectionExtension--><!--MD5=[a607a8b1936e9958ea7f215ac0d1299e]
link InfectionExtension to StatInfo--><!--MD5=[c3d5b23f54788575ecff155e099e60d9]
link StatInfo to ParamType--><!--MD5=[7e8c9380fbb8acca6011e784b6bd7c07]
link InfectionCntInfo to S--><!--MD5=[c372a100348427a2fe16e138dc665742]
link S to St--><!--MD5=[9e63e1f61dad829b4aad9c5625d157c5]
link St to ParamInfo--><!--MD5=[ac985323b3819591bb3db7ed4148cf31]
link ParamInfo to AppDelegate--><!--MD5=[fe684021415e0bec3fbe9fd2c284a004]
@startuml class_diagram

class Document {
  + _runtimeParams: RuntimeParams
  + _initParams: RuntimeParams
  + _worldParams: WorldParams
  + _tmpWorldParams: WorldParams
  + _popLock: Lock *
  + _statInfo: StatInfo *
  + «get» Pop: Agent **
  + «get» QList: Agent *
  + «get» CList: Agent *
  + «get» WrapList: MutableArray<WrapInfo *> *
  + «get» CListP: Agent **
  + «get» QListP: Agent **
  + «get» runtimeParamsP: RuntimeParams *
  + «get» initParamsP: RuntimeParams *
  + «get» worldParamsP: WorldParams *
  + «get» tmpWorldParamsP: WorldParams *
  + running(): Bool
  + popLock(): void
  + popUnlock(): void
  + «get» RecovPHist: MutableArray<MyCounter *> *
  + «get» IncubPHist: MutableArray<MyCounter *> *
  + «get» DeathPHist: MutableArray<MyCounter *> *
  + «get» scenario: Array<any> *
  + testInfectionOfAgent(agent: Agent *, reason: TestType): void
  + addNewWarp(info: WarpInfo *): void
  + «get» ID: String *
  + «get» lastTLock: Lock *
  + «get/set» lastTouch: Date *
  + «get/set» docKey: Number *
  + «get/set» stopCallBack: LoopMode -> void
  + touch(): Bool
  + start(stopAt: Integer): void
  + step(): void
  + stop(): void
  + resetPop(): void
  + «get» statInfo: StatInfo *
  + «get» scenarioPList: Array<any> *
  + setScenarioWithPList(plist: Array<any>*): void
  - scenarioIndex: Integer
  - scenarioPanel: Scenario *
  - paramPanel: ParamPanel *
  - dataPanel: DataPanel *
  - loopMode: LoopMode
  - nPop: Integer
  - nMesh: Integer
  - pop: Agent **
  - pRange: Range *
  - prevTime: Float
  - stepsPerSec: Float
  - newWarpF: MutableDictionary<Number *, WarpInfo *> *
  - testees: MutableDictionary<Number *, Number *> *
  - newWarpLock: Lock *
  - testeesLock: Lock *
  - animeSteps: Integer 
  - stopAtNDays: Integer
  - scenario: Array *
  - predicateToStop: Predicate *
  - testQueHead: TestEntry *
  - testQueTail: TestEntry *
  - dispatchQueue: dispatch_queue_t
  - dispatchGroup: dispatch_group_t
  - orgWindowSize: Size
  - orgViewSize: Size
  - runtimeTimer: Timer *
  - addOperation(block: void -> void): void
  - waitAllOperations(): void
  - addInfected(n: Integer): void
  - execScenario(): void
  {static} phase_info(scen: Array<any> *): Array<Number *> *
  - resetPop(): void
  - init(): instancetype
  {static} property_from_element(elm: Object *): Object *
  {static} element_property_from(prop: Object *): Object *
  - scenarioPList(): Array<any> *
  - documentDictionary(): Dictionary *
  - readFromDictionary(dict: Dictionary *)
  {static} testEntriesLock: Lock *
  - deliverTestResults(testCount: UInteger *): void
  - gridToGridA(iA: Integer, iB: Integer): void
  ' {static} N_MTIME: int
  ' {static} mtime: unsigned long[]
  ' {static} mCount: Integer
  ' {static} mCount2: Integer
  - doOneStep(): void
  - runningLoop(): void
  - goAhead(): void
}

class WarpInfo {
  + agent; Agent *
  + goal: Point
  + mode: WarpType
  + initWithAgent(a: Agent *, p :Point, md: WarpType): instancetype
}

class TableCellView
class ButtonsCellView

TableCellView <|- - ParameterCellView
class ParameterCellView {
  + «get» namePopUp: PopUpButton *
  + «get» digits: TextField *
}

class ScenarioItem {
  + scenario: Scenario *
  + «get/set» view: TableCellView
  + «get» lnView: TableCellView
  + «get» btnsView: ButtonsCellView
  + buttonAction(button: Button *): void
}

ScenarioItem <|- - CondElmItem
class CondElmItem {
  + «get/set» parent: ScenarioItem *
}

CondElmItem <|- - ComparisonItem
class ComparisonItem {
  + varIndex: Integer
  + opeIndex: Integer
  + maxValue: Integer
  + ratioValue: Float
  + days: Integer
}

CondElmItem <|- - CompoundItem
class CompoundItem {
  + «get/set» children: MutableArray<CondElmItem *> *
  + replaceChildAtIndex(index: Integer, newChild: CondElmItem *): void
}

CondItem <|- - ScenarioItem
class CondItem {
  + condType: CondType
  + destination: Integer
  + «get/set» element: CondElmItem *
  + «get/set» predicate: Predicate *
  + replaceElementWithItem(newElement: CondElmItem *): void
}

class WindowController
WindowController <|- - Scenario
class Scenario {
  + shiftUpBtn: Button *
  + shiftDownBtn: Button *
  + deselectBtn: Button *
  + removeBtn: Button *
  + applyBtn: Button *
  + «get/set» outlineView: OutlineView *
  + «get» doc: Document *
  + «get» undoManager: UndoManager *
  + «get» intFormatter: NumberFormatter *
  + initWithDoc(dc: Document *): instancetype
  + adjustControls(undoOrRedo: BOOL): void
  + numberOfItems(): Integer
  + removeItem(item: ScenarioItem *): void
  + itemWithPredicate(predicate: Predicate *, parent: ScenarioItem *): CondElmItem *
  + setScenarioWithArray(array: Array<any> *): void
}

class MyCounter {
  + «get/set» cnt: Integer
  + inc(): void
  + dec(): void
  - init(): instancetype
  - description(): String *
}

class InfectionCntInfo <<struct>> {
  + orgV: int
  + newV: int
}

class InfectionExtension {
  + valueWithInfect(info: InfectionCntInfo): Value *
  - infectValue(): InfectionCntInfo
}

class StatInfo {
  + _doc: Document *
  + maxCounts: UInteger[NIntIndexes]
  + maxTransit: UInteger[NIntIndexes]
  + imgBm: unsigned char *
  + popSize: Integer
  + steps: Integer
  + skip: Integer
  + days: Integer
  + skipDays: Integer
  + statCumm: StatData
  + transDaily: StatData
  + transCumm: StatData
  + testCumm: UInteger[NIntTestTypes]
  + testResultsW: TestResultCount[7]
  + maxStepPRate: Float
  + maxDailyPRate: Float
  + pRateCumm: Float
  + phaseInfo: NSArray<NSNumber *> *
  + scenarioPhases: MutableArray<NSNumber *> *
  + «get» scenarioPhases: MutableArray<NSNumber *> *
  + «get» statistics: StatData *
  + «get» transit: StatData *
  + «get» testResultCnt: TestResultCount
  + «get» IncubPHist: MutableArray<MyCounter *> *
  + «get» RecovPHist: MutableArray<MyCounter *> *
  + «get» DeathPHist: MutableArray<MyCounter *> *
  + «get» NInfectsHist: MutableArray<MyCounter *> *
  + doc(): Document *
  + reviseColors(): void
  + reset(nPop : NSInteger, nInitInfec, :NSInteger): void
  + setPhaseInfo(info: Array<NSNumber *> *): void
  + phaseChangedTo(lineNumber: Integer): void
  + calcStatWithTestCount(testCount: UInteger *, infects: NSArray<NSArray<NSValue *> *> *): BOOL
  + skipSteps(): Integer
  + skipDays(): Integer
  + setDoc(doc: Document *): void
  - init(): instancetype
  - setDoc(docu: Document *): void
  - fillImageForOneStep(stat: StatData *, ix: Integer): void
  - susceptible(): Integer
  - infected(): Integer
  - symptomatic(): Integer
  - recovered(): Integer
  - died(): Integer
  - quarantine(): Integer
  - dailyInfection(): Integer
  - dailySymptomatic(): Integer
  - dailyRecovery(): Integer
  - dailyDeath(): Integer
  - weeklyPositive(): Integer
  - weeklyPositiveRate(): Float
}

enum ParamType {
  ParamTypeNone
  ParamTypeFloat
  ParamTypeFloatS
  ParamTypeDist
  ParamTypeInteger
}

class S<T> {
  + defaultValue: T
  + minValue: T
  + maxValue: T
}

class St {
  defMin: Float
  defMode: Float
  defMax: Float
}

class ParamInfo <<struct>> {
  + type: ParamType
  + key: String
  + v: S<Float> | St | S<Integer>
}

class AppDelegate {
  - applicationWillFinishLaunching(aNotification: Notification *): void
}

@enduml

@startuml class_diagram

class Document {
  + _runtimeParams: RuntimeParams
  + _initParams: RuntimeParams
  + _worldParams: WorldParams
  + _tmpWorldParams: WorldParams
  + _popLock: Lock *
  + _statInfo: StatInfo *
  + «get» Pop: Agent **
  + «get» QList: Agent *
  + «get» CList: Agent *
  + «get» WrapList: MutableArray<WrapInfo *> *
  + «get» CListP: Agent **
  + «get» QListP: Agent **
  + «get» runtimeParamsP: RuntimeParams *
  + «get» initParamsP: RuntimeParams *
  + «get» worldParamsP: WorldParams *
  + «get» tmpWorldParamsP: WorldParams *
  + running(): Bool
  + popLock(): void
  + popUnlock(): void
  + «get» RecovPHist: MutableArray<MyCounter *> *
  + «get» IncubPHist: MutableArray<MyCounter *> *
  + «get» DeathPHist: MutableArray<MyCounter *> *
  + «get» scenario: Array<any> *
  + testInfectionOfAgent(agent: Agent *, reason: TestType): void
  + addNewWarp(info: WarpInfo *): void
  + «get» ID: String *
  + «get» lastTLock: Lock *
  + «get/set» lastTouch: Date *
  + «get/set» docKey: Number *
  + «get/set» stopCallBack: LoopMode -> void
  + touch(): Bool
  + start(stopAt: Integer): void
  + step(): void
  + stop(): void
  + resetPop(): void
  + «get» statInfo: StatInfo *
  + «get» scenarioPList: Array<any> *
  + setScenarioWithPList(plist: Array<any>*): void
  - scenarioIndex: Integer
  - scenarioPanel: Scenario *
  - paramPanel: ParamPanel *
  - dataPanel: DataPanel *
  - loopMode: LoopMode
  - nPop: Integer
  - nMesh: Integer
  - pop: Agent **
  - pRange: Range *
  - prevTime: Float
  - stepsPerSec: Float
  - newWarpF: MutableDictionary<Number *, WarpInfo *> *
  - testees: MutableDictionary<Number *, Number *> *
  - newWarpLock: Lock *
  - testeesLock: Lock *
  - animeSteps: Integer 
  - stopAtNDays: Integer
  - scenario: Array *
  - predicateToStop: Predicate *
  - testQueHead: TestEntry *
  - testQueTail: TestEntry *
  - dispatchQueue: dispatch_queue_t
  - dispatchGroup: dispatch_group_t
  - orgWindowSize: Size
  - orgViewSize: Size
  - runtimeTimer: Timer *
  - addOperation(block: void -> void): void
  - waitAllOperations(): void
  - addInfected(n: Integer): void
  - execScenario(): void
  {static} phase_info(scen: Array<any> *): Array<Number *> *
  - resetPop(): void
  - init(): instancetype
  {static} property_from_element(elm: Object *): Object *
  {static} element_property_from(prop: Object *): Object *
  - scenarioPList(): Array<any> *
  - documentDictionary(): Dictionary *
  - readFromDictionary(dict: Dictionary *)
  {static} testEntriesLock: Lock *
  - deliverTestResults(testCount: UInteger *): void
  - gridToGridA(iA: Integer, iB: Integer): void
  - doOneStep(): void
  - runningLoop(): void
  - goAhead(): void
}

class WarpInfo {
  + agent; Agent *
  + goal: Point
  + mode: WarpType
  + initWithAgent(a: Agent *, p :Point, md: WarpType): instancetype
}

class TableCellView
class ButtonsCellView

TableCellView <|- - ParameterCellView
class ParameterCellView {
  + «get» namePopUp: PopUpButton *
  + «get» digits: TextField *
}

class ScenarioItem {
  + scenario: Scenario *
  + «get/set» view: TableCellView
  + «get» lnView: TableCellView
  + «get» btnsView: ButtonsCellView
  + buttonAction(button: Button *): void
}

ScenarioItem <|- - CondElmItem
class CondElmItem {
  + «get/set» parent: ScenarioItem *
}

CondElmItem <|- - ComparisonItem
class ComparisonItem {
  + varIndex: Integer
  + opeIndex: Integer
  + maxValue: Integer
  + ratioValue: Float
  + days: Integer
}

CondElmItem <|- - CompoundItem
class CompoundItem {
  + «get/set» children: MutableArray<CondElmItem *> *
  + replaceChildAtIndex(index: Integer, newChild: CondElmItem *): void
}

CondItem <|- - ScenarioItem
class CondItem {
  + condType: CondType
  + destination: Integer
  + «get/set» element: CondElmItem *
  + «get/set» predicate: Predicate *
  + replaceElementWithItem(newElement: CondElmItem *): void
}

class WindowController
WindowController <|- - Scenario
class Scenario {
  + shiftUpBtn: Button *
  + shiftDownBtn: Button *
  + deselectBtn: Button *
  + removeBtn: Button *
  + applyBtn: Button *
  + «get/set» outlineView: OutlineView *
  + «get» doc: Document *
  + «get» undoManager: UndoManager *
  + «get» intFormatter: NumberFormatter *
  + initWithDoc(dc: Document *): instancetype
  + adjustControls(undoOrRedo: BOOL): void
  + numberOfItems(): Integer
  + removeItem(item: ScenarioItem *): void
  + itemWithPredicate(predicate: Predicate *, parent: ScenarioItem *): CondElmItem *
  + setScenarioWithArray(array: Array<any> *): void
}

class MyCounter {
  + «get/set» cnt: Integer
  + inc(): void
  + dec(): void
  - init(): instancetype
  - description(): String *
}

class InfectionCntInfo <<struct>> {
  + orgV: int
  + newV: int
}

class InfectionExtension {
  + valueWithInfect(info: InfectionCntInfo): Value *
  - infectValue(): InfectionCntInfo
}

class StatInfo {
  + _doc: Document *
  + maxCounts: UInteger[NIntIndexes]
  + maxTransit: UInteger[NIntIndexes]
  + imgBm: unsigned char *
  + popSize: Integer
  + steps: Integer
  + skip: Integer
  + days: Integer
  + skipDays: Integer
  + statCumm: StatData
  + transDaily: StatData
  + transCumm: StatData
  + testCumm: UInteger[NIntTestTypes]
  + testResultsW: TestResultCount[7]
  + maxStepPRate: Float
  + maxDailyPRate: Float
  + pRateCumm: Float
  + phaseInfo: NSArray<NSNumber *> *
  + scenarioPhases: MutableArray<NSNumber *> *
  + «get» scenarioPhases: MutableArray<NSNumber *> *
  + «get» statistics: StatData *
  + «get» transit: StatData *
  + «get» testResultCnt: TestResultCount
  + «get» IncubPHist: MutableArray<MyCounter *> *
  + «get» RecovPHist: MutableArray<MyCounter *> *
  + «get» DeathPHist: MutableArray<MyCounter *> *
  + «get» NInfectsHist: MutableArray<MyCounter *> *
  + doc(): Document *
  + reviseColors(): void
  + reset(nPop : NSInteger, nInitInfec, :NSInteger): void
  + setPhaseInfo(info: Array<NSNumber *> *): void
  + phaseChangedTo(lineNumber: Integer): void
  + calcStatWithTestCount(testCount: UInteger *, infects: NSArray<NSArray<NSValue *> *> *): BOOL
  + skipSteps(): Integer
  + skipDays(): Integer
  + setDoc(doc: Document *): void
  - init(): instancetype
  - setDoc(docu: Document *): void
  - fillImageForOneStep(stat: StatData *, ix: Integer): void
  - susceptible(): Integer
  - infected(): Integer
  - symptomatic(): Integer
  - recovered(): Integer
  - died(): Integer
  - quarantine(): Integer
  - dailyInfection(): Integer
  - dailySymptomatic(): Integer
  - dailyRecovery(): Integer
  - dailyDeath(): Integer
  - weeklyPositive(): Integer
  - weeklyPositiveRate(): Float
}

enum ParamType {
  ParamTypeNone
  ParamTypeFloat
  ParamTypeFloatS
  ParamTypeDist
  ParamTypeInteger
}

class S<T> {
  + defaultValue: T
  + minValue: T
  + maxValue: T
}

class St {
  defMin: Float
  defMode: Float
  defMax: Float
}

class ParamInfo <<struct>> {
  + type: ParamType
  + key: String
  + v: S<Float> | St | S<Integer>
}

class AppDelegate {
  - applicationWillFinishLaunching(aNotification: Notification *): void
}

@enduml

PlantUML version 1.2020.10(Sun May 17 18:35:57 JST 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 15+36
Operating System: Mac OS X
Default Encoding: UTF-8
Language: en
Country: JP
--></g></svg>